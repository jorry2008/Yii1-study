视频教程：
http://www.icoolxue.com/album/show/41


进度：
http://git-scm.com/book/zh/Git-%E5%9F%BA%E7%A1%80-%E8%AE%B0%E5%BD%95%E6%AF%8F%E6%AC%A1%E6%9B%B4%E6%96%B0%E5%88%B0%E4%BB%93%E5%BA%93

直接记录快照创建索引

配有本地化仓库，近乎所有操作都是本地执行

时刻保持数据完整性，它知道你的任何操作和所范下的错误，每个步骤都有一个指纹

文件三状态，已提交（committed），已修改（modified）和已暂存（staged）
已修改表示修改了某个文件，但还没有提交保存；
已暂存表示把已修改的文件放在下次提交时要保存的清单中。
已提交表示该文件已经被安全地保存在本地数据库中了；


1.每个项目都有一个 Git 目录
git clone 出来的，就是其中 .git 的目录；
git clone --bare 的话，新建的目录本身就是 Git 目录。
它是 Git用来保存元数据和对象数据库的地方。
该目录非常重要，每次克隆镜像仓库的时候，实际拷贝的就是这个目录里面的数据。


基本的 Git 工作流程如下：
    在工作目录中修改某些文件。
    对修改后的文件进行快照，然后保存到暂存区域。
    提交更新，将保存在暂存区域的文件快照永久转储到 Git 目录中。
所以，我们可以从文件所处的位置来判断状态：
如果是 Git 目录中保存着的特定版本文件，就属于已提交状态；
如果作了修改并已放入暂存区域，就属于已暂存状态；
如果自上次取出后，作了修改但还没有放到暂存区域，就是已修改状态。


平台的命令差异：
给 Windows 用户的敬告：你应该在 msysGit 提供的 Unix 风格的 shell 来运行 Git。
在 Unix 风格的 shell 中，可以使用本书中提及的复杂多行的命令。
对于那些需要在 Windows 命令行中使用 Git 的用户，必须注意：
参数中间有空格的时候，必须使用双引号将参数括起来（在 Linux 中是单引号）；
另外，如果扬抑符（^）作为参数的结尾，并且作为这一行的最后一个字符，则这个参数也需要用双引号括起来。
因为扬抑符在 Windows 命令行中表示续行（译注：即下一行为这一行命令的继续）。


git客户端，http://msysgit.github.com/
已经自带了SSH

注意：
工作目录下面的所有文件都不外乎这两种状态：已跟踪或未跟踪。
已跟踪：已修改或者已放入暂存区，上次快照中有它们的记录。
未跟踪：既没有上次更新时的快照，也不在当前的暂存区域。
所以克隆的文件都是已跟踪状态。

理解点1：
add将文件加入暂存区，并生成一个暂存快照
只有add之后才可以commit并-m信息，生成一个新版本的提交快照
即当被跟踪文件修改后，一定得先add后才可以成功提交
这就是三种状态的理解：未跟踪状态，已跟踪状态，提交状态
对应三个区：非控制文件，暂存区，版本区

理解点2：
diff的含义
即比较上次的快照和当前的修改内容的差异(即查看文件中做了哪些修改，是否要add操作暂存这些修改)
diff --cached
表示比较上次的快照和暂存快照之间的差异(即表示暂存后的文件和上次提交快照的哪些内容不同，并决定是否要commit)

理解点3：
为什么在commit之前还有两种状态？
即文件修改状态和add到暂存区状态
假如我有一个功能开发完成了，我会add到暂存区
这时我要做一些代码级的测试，对功能文件做了修改，
最后功能确认是正常的，那么我就直接commit将以前add的代码提交到版本库
接下来就checkout .即将修改辙消，整个过程就完成了.....

修改--add-->暂存--commit-->提交

理解点4：分支
我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在，commit就是往master分支上提交更改。

理解点5：签出
命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
总之，就是让这个文件回到最近一次git commit或git add时的状态。






